name: Build and Deploy API Service (OIDC)

on:
  push:
    branches: [main]
    paths:
      - "api-service/**"

  pull_request:
    branches: [main]
    paths:
      - "api-service/**"

  workflow_dispatch:

# Permissions required for OIDC login
permissions:
  id-token: write # This is required to get the OIDC token
  contents: read # This is required to check out your code

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  # !! UPDATE THESE VALUES !!
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  AZURE_CONTAINER_APP_NAME: ${{ secrets.AZURE_CONTAINER_API_SERVICE_NAME }}

jobs:
  build-api:
    name: Build API Service
    runs-on: ubuntu-latest
    environment: production
    outputs:
      sha: ${{ steps.get-sha.outputs.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get short SHA
        id: get-sha
        run: |
          SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHA" >> $GITHUB_ENV
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push API
        uses: docker/build-push-action@v5
        with:
          context: ./api-service
          file: ./api-service/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/streamlet-api-service:latest
            ${{ env.DOCKER_USERNAME }}/streamlet-api-service:${{ env.SHORT_SHA }}

  deploy-api:
    name: Deploy API Service to Azure
    runs-on: ubuntu-latest
    needs: build-api
    environment: production

    steps:
      # Step 1: Log in to Azure using OIDC
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 2: Update the Container App
      - name: Update Azure Container App
        uses: azure/CLI@v2
        with:
          inlineScript: |
            echo "Updating ${{ env.AZURE_CONTAINER_APP_NAME }} with image ${{ env.DOCKER_USERNAME }}/streamlet-api-service:${{ needs.build-api.outputs.sha }}"

            az containerapp update \
              --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --image ${{ env.DOCKER_USERNAME }}/streamlet-api-service:${{ needs.build-api.outputs.sha }}
